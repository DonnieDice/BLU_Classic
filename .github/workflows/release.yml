name: Package and Release

on:
  push:
    tags:
      - 'v*'  # Triggers only on version tags like v1.0.0, v1.0.0-alpha, etc.

env:
  CF_API_KEY: ${{ secrets.CF_API_KEY }}
  WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
  WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
  GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Clone Project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config --global user.name "donniedice"
          git config --global user.email "donniedice@protonmail.com"

      - name: Set Release Type
        id: set_release_type
        run: |
          TAG_NAME=${{ github.ref }}
          if [[ "$TAG_NAME" == *"beta"* ]]; then
            echo "release_type=beta" >> $GITHUB_OUTPUT
          elif [[ "$TAG_NAME" == *"alpha"* ]]; then
            echo "release_type=alpha" >> $GITHUB_OUTPUT
          else
            echo "release_type=release" >> $GITHUB_OUTPUT
          fi

      - name: Extract Version from TOC
        id: extract_version
        run: |
          version=$(grep "^## Version:" BLU_Classic.toc | sed 's/## Version: //')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Extract Changelog
        id: extract_changelog
        run: |
          if [ -f "docs/CHANGES.md" ]; then
            # Read the changelog and properly escape it for JSON
            CHANGELOG=$(cat docs/CHANGES.md | head -20 | jq -Rs .)
            echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT
          else
            echo "changelog=\"No changelog available\"" >> $GITHUB_OUTPUT
          fi

      - name: Package and Release
        uses: BigWigsMods/packager@master
        with:
          release-type: ${{ steps.set_release_type.outputs.release_type }}

      - name: Send Discord Notification
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -z "$DISCORD_WEBHOOK" ]; then
            echo "Discord webhook not configured, skipping notification"
            exit 0
          fi
          
          # Determine release type emoji and color
          RELEASE_TYPE="${{ steps.set_release_type.outputs.release_type }}"
          if [ "$RELEASE_TYPE" = "alpha" ]; then
            EMOJI="ðŸ”¬"
            TYPE_TEXT="Alpha"
          elif [ "$RELEASE_TYPE" = "beta" ]; then
            EMOJI="ðŸ§ª"
            TYPE_TEXT="Beta"
          else
            EMOJI="ðŸŽ®"
            TYPE_TEXT=""
          fi
          
          # Get the changelog (already JSON-escaped from previous step)
          CHANGELOG='${{ steps.extract_changelog.outputs.changelog }}'
          
          # Build the JSON payload using jq for proper escaping
          JSON_PAYLOAD=$(jq -n \
            --arg emoji "$EMOJI" \
            --arg type_text "$TYPE_TEXT" \
            --arg version "${{ steps.extract_version.outputs.version }}" \
            --arg tag "${{ github.ref_name }}" \
            --argjson changelog "$CHANGELOG" \
            '{
              "content": "",
              "username": "BLU Classic Update",
              "avatar_url": "https://raw.githubusercontent.com/donniedice/BLU_Classic/main/images/BLU_Logo.png",
              "embeds": [{
                "title": "\($emoji) BLU Classic | Better Level-Up! - \($version) \($type_text)",
                "description": "**Level up in style!** - A new version of BLU Classic has been released!\n\nðŸŽµ **What'\''s New:**\n\($changelog)\n\n**Play sounds from legendary games when you level up, complete quests, or earn achievements!**",
                "url": "https://github.com/donniedice/BLU_Classic/releases/tag/\($tag)",
                "color": 5814783,
                "thumbnail": {
                  "url": "https://raw.githubusercontent.com/donniedice/BLU_Classic/main/images/BLU_Logo.png"
                },
                "fields": [
                  {
                    "name": "ðŸ“¥ Downloads",
                    "value": "[CurseForge](https://www.curseforge.com/wow/addons/blu-classic)\n[WoWInterface](https://www.wowinterface.com/downloads/info26945)\n[Wago.io](https://addons.wago.io/addons/blu-classic)\n[GitHub](https://github.com/donniedice/BLU_Classic)",
                    "inline": true
                  },
                  {
                    "name": "ðŸŽ® Compatibility",
                    "value": "âœ… The War Within\nâœ… Classic Era\nâœ… Cataclysm\nâœ… MoP\nâœ… Wrath\nâœ… TBC",
                    "inline": true
                  },
                  {
                    "name": "ðŸ’¬ Support",
                    "value": "[Join Discord](https://discord.gg/N7kdKAHVVF)\n[Report Issues](https://github.com/donniedice/BLU_Classic/issues)",
                    "inline": true
                  }
                ],
                "footer": {
                  "text": "RGX Mods - RealmGX Community",
                  "icon_url": "https://raw.githubusercontent.com/donniedice/SimpleQuestPlates/main/images/kiwi.gif"
                },
                "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'"
              }]
            }')
          
          # Send to Discord
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "$JSON_PAYLOAD" \
               "$DISCORD_WEBHOOK"