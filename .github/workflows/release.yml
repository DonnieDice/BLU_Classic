name: Package and Release

on:
  push:
    tags:
      - 'v*'  # Triggers only on version tags like v1.0.0, v1.0.0-alpha, etc.

env:
  CF_API_KEY: ${{ secrets.CF_API_KEY }}
  WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
  WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
  GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Clone Project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config --global user.name "donniedice"
          git config --global user.email "donniedice@protonmail.com"

      - name: Set Release Type
        id: set_release_type
        run: |
          TAG_NAME=${{ github.ref }}
          if [[ "$TAG_NAME" == *"beta"* ]]; then
            echo "::set-output name=release_type::beta"
          elif [[ "$TAG_NAME" == *"alpha"* ]]; then
            echo "::set-output name=release_type::alpha"
          else
            echo "::set-output name=release_type::release"
          fi

      - name: Extract Version from TOC
        id: extract_version
        run: |
          version=$(grep "^## Version:" BLU_Classic.toc | sed 's/## Version: //')
          echo "::set-output name=version::$version"

      - name: Extract Changelog
        id: extract_changelog
        run: |
          if [ -f "docs/CHANGES.md" ]; then
            # Read the raw changelog content
            CHANGELOG_RAW=$(cat docs/CHANGES.md | head -20)
            # Escape the raw changelog for JSON using jq
            CHANGELOG_ESCAPED=$(jq -Rsa . <<< "$CHANGELOG_RAW")
            echo "::set-output name=changelog::$CHANGELOG_ESCAPED"
          else
            echo "::set-output name=changelog::No changelog available"
          fi

      - name: Package and Release
        uses: BigWigsMods/packager@master
        with:
          release-type: ${{ steps.set_release_type.outputs.release_type }}

      - name: Send Discord Notification
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ -z "$DISCORD_WEBHOOK" ]; then
            echo "Discord webhook not configured, skipping notification"
            exit 0
          fi
          
          # Determine release type emoji and color
          RELEASE_TYPE="${{ steps.set_release_type.outputs.release_type }}"
          if [ "$RELEASE_TYPE" = "alpha" ]; then
            EMOJI="ðŸ”¬"
            TYPE_TEXT="Alpha"
          elif [ "$RELEASE_TYPE" = "beta" ]; then
            EMOJI="ðŸ§ª"
            TYPE_TEXT="Beta"
          else
            EMOJI="ðŸŽ®"
            TYPE_TEXT=""
          fi
          
          # Get changelog and version
          CHANGELOG_CONTENT="${{ steps.extract_changelog.outputs.changelog }}"
          VERSION="${{ steps.extract_version.outputs.version }}"
          TAG_NAME="${{ github.ref_name }}" # e.g., v1.1.2
          
          # Construct JSON payload using jq
          JSON_PAYLOAD=$(jq -n \
            --arg content "" \
            --arg username "BLU Classic Update" \
            --arg avatar_url "https://raw.githubusercontent.com/donniedice/BLU_Classic/main/images/BLU_Logo.png" \
            --arg title "$EMOJI BLU Classic | Better Level-Up! - $VERSION $TYPE_TEXT" \
            --arg description_prefix "**Level up in style!** - A new version of BLU Classic has been released!\\n\\nðŸŽµ **What's New:**\\n" \
            --arg changelog "$CHANGELOG_CONTENT" \
            --arg description_suffix "\\n\\n**Play sounds from legendary games when you level up, complete quests, or earn achievements!**" \
            --arg url "https://github.com/donniedice/BLU_Classic/releases/tag/$TAG_NAME" \
            --arg color 5814783 \
            --arg thumbnail_url "https://raw.githubusercontent.com/donniedice/BLU_Classic/main/images/BLU_Logo.png" \
            --arg footer_text "RGX Mods - RealmGX Community" \
            --arg footer_icon_url "https://raw.githubusercontent.com/donniedice/SimpleQuestPlates/main/images/kiwi.gif" \
            '{ \
              content: $content, \
              username: $username, \
              avatar_url: $avatar_url, \
              embeds: [{ \
                title: $title, \
                description: ($description_prefix + $changelog + $description_suffix), \
                url: $url, \
                color: $color, \
                thumbnail: { url: $thumbnail_url }, \
                fields: [ \
                  { name: "ðŸ“¥ Downloads", value: "[CurseForge](https://www.curseforge.com/wow/addons/blu-classic)\\n[WoWInterface](https://www.wowinterface.com/downloads/info26945)\\n[Wago.io](https://addons.wago.io/addons/blu-classic)\\n[GitHub](https://github.com/donniedice/BLU_Classic)", inline: true }, \
                  { name: "ðŸŽ® Compatibility", value: "âœ… The War Within\\nâœ… Classic Era\\nâœ… Cataclysm\\nâœ… MoP\\nâœ… Wrath\\nâœ… TBC", inline: true }, \
                  { name: "ðŸ’¬ Support", value: "[Join Discord](https://discord.gg/N7kdKAHVVF)\\n[Report Issues](https://github.com/donniedice/BLU_Classic/issues)", inline: true } \
                ], \
                footer: { text: $footer_text, icon_url: $footer_icon_url }, \
                timestamp: "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)" \
              }] \
            }' \
          )
          
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "$JSON_PAYLOAD" \
               "$DISCORD_WEBHOOK"